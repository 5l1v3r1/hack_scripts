TPF0TROMServerOptions 	UseNTAuthSecurityLevelPortEnableOverlayCaptureShowTrayIconBindIPAny interfaceCallbackAutoConnect	CallbackConnectInterval<HideStopIpFilterTypeProtectCallbackSettingsDisableRemoteControlDisableRemoteScreenDisableFileTransferDisableRedirectDisableTelnetDisableRemoteExecuteDisableTaskManagerDisableOverlayDisableShutdownDisableRemoteUpgradeDisablePreviewCaptureDisableDeviceManagerDisableChatDisableScreenRecordDisableAVCaptureDisableRegeditHideInterface DisableAVChatNotifyChangeTrayIcon	NotifyBallonHintNotifyPlaySoundNotifyShowConnectionInfoLogUseLogUseSystemLogDeniedChatMessageUserCanRestrictServerDeniedAccessToServerShowConnectByIDAskUserPermissionAskUserSetTimeOut
AskUserAutoDenyUsers	AskUserAutoAllowUsersShowUserFTPOperationInfoAskUserPermissionForAuthShowSupportModeWindow!DoNotAskPermissionAfterDisconnectUseHTTPProxyServer	ProxyType 	ProxyPort ProxyAuthenticationAuthKeyStringhMQAwADcANgA0ADEAQQA5AEQAMQAxADQANQAwAEQAMQAxADMAMgBFAEQANQBCAEYAMgA0ADkAOABDADQANABGAD0ANAAxADYANgA4AA==IDConnection
1234567890  